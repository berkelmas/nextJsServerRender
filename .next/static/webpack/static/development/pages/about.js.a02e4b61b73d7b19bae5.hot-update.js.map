{"version":3,"file":"static/webpack/static\\development\\pages\\about.js.a02e4b61b73d7b19bae5.hot-update.js","sources":["webpack:///./components/CKeditor.js"],"sourcesContent":["import { Component } from 'react';\r\n\r\nimport {Row, Col, Button, Input, Spinner} from 'reactstrap';\r\nimport fetch from 'isomorphic-unfetch';\r\n\r\nimport dynamic from 'next/dynamic';\r\nconst CKEditor = dynamic(() => import('./CkeditorComp'), {\r\n  ssr: false\r\n})\r\n\r\nclass CKeditor extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      article: 'Makale',\r\n      isAdmin: false,\r\n      articleTitle: '',\r\n      authLoading: true,\r\n      modal : false\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const {firebase} = this.props;\r\n\r\n    const token = localStorage.getItem('googleToken');\r\n    if (token) {\r\n      const credential = firebase.auth.GoogleAuthProvider.credential(null, token);\r\n      firebase.auth().signInAndRetrieveDataWithCredential(credential)\r\n              .then(res => {\r\n                if (res.user.displayName === 'Berk Elmas') {\r\n                  this.setState({\r\n                    isAdmin: true,\r\n                    authLoading: false\r\n                  })\r\n                }\r\n              })\r\n              .catch(err => this.setState({authLoading: false}))\r\n    }\r\n  }\r\n\r\n  updateMakale = (event, editor) => {\r\n    const data = editor.getData();\r\n    this.setState({\r\n      article: data\r\n    })\r\n  }\r\n\r\n  saveArticle = e => {\r\n    fetch('http://localhost:3001/addarticle', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        title: this.state.articleTitle,\r\n        message: this.state.article,\r\n        author: 'Berk Elmas'\r\n      })\r\n    })\r\n    .then(res => {\r\n      this.setState({\r\n        article: 'Makale Gonderildi',\r\n        articleTitle: ''\r\n      })\r\n    })\r\n    .catch(err => {\r\n      this.setState({\r\n        article: 'Makale Gonderilemedi',\r\n        articleTitle: ''\r\n      })\r\n    })\r\n    e.preventDefault;\r\n  }\r\n\r\n  toggle() {\r\n    this.setState(prevState => ({\r\n      modal: !prevState.modal\r\n    }));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n    <div>\r\n    <Row className=\"mt-5\">\r\n      <Col sm=\"12\" md={{ size: 8, offset: 2 }}>\r\n      <h2 className=\"text-center\">Makale Ekle</h2>\r\n        <Input onChange={(e) => this.setState({articleTitle: e.target.value})} value={this.state.articleTitle} className=\"p-3 mt-3 mb-3\" placeholder=\"Makale Başlığı\" />\r\n        <CKEditor\r\n          data={this.state.article}\r\n          onInit={ editor => {\r\n          // You can store the \"editor\" and use when it is needed.\r\n              console.log( 'Editor is ready to use!', editor );\r\n          } }\r\n          onChange={ ( event, editor ) => {\r\n              this.updateMakale(event, editor)\r\n          } }\r\n\r\n          />\r\n        {this.state.authLoading\r\n          ?\r\n          <div className=\"d-flex justify-content-center p-5\"><Spinner className=\"mx-auto\" style={{ width: '3rem', height: '3rem' }} type=\"grow\" /></div>\r\n          :\r\n          this.state.isAdmin ? <button onClick={this.saveArticle} className=\"btn btn-info mt-3 mb-5 w-100\">Makale Ekle</button>\r\n          :\r\n          <p className=\"text-center warning-p\">Sadece Berk Elmas Makale Yükleyebilir</p>\r\n        }\r\n      </Col>\r\n    </Row>\r\n\r\n    <Button color=\"danger\" onClick={this.toggle}>{this.props.buttonLabel}</Button>\r\n    <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\r\n      <ModalHeader toggle={this.toggle}>Modal title</ModalHeader>\r\n      <ModalBody>\r\n        Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\r\n      </ModalBody>\r\n      <ModalFooter>\r\n        <Button color=\"primary\" onClick={this.toggle}>Do Something</Button>{' '}\r\n        <Button color=\"secondary\" onClick={this.toggle}>Cancel</Button>\r\n      </ModalFooter>\r\n    </Modal>\r\n\r\n    </div>\r\n    )\r\n  }\r\n}\r\nexport default CKeditor;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AA+BA;AACA;AAAA;AACA;AADA;AAGA;AACA;AApCA;AAsCA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AANA;AAaA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AA9DA;AACA;AACA;AACA;AACA;AACA;AALA;AAFA;AASA;AACA;;;AACA;AAAA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;;AAqCA;AACA;AAAA;AACA;AADA;AAAA;AAGA;;;AAEA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAEA;AAAA;AAKA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAKA;AAAA;AAAA;AACA;AAAA;AAAA;AAMA;;;;AAnHA;AACA;AAoHA;;;;A","sourceRoot":""}