{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.3d4ab557f5abd85e824a.hot-update.js","sources":["webpack:///./components/CardsUst.js"],"sourcesContent":["import React, {Fragment} from 'react';\r\nimport {Row, Col, Card, CardTitle, CardText, Button,\r\n        InputGroup, Input, InputGroupAddon, Form, FormGroup,\r\n        Spinner\r\n      } from 'reactstrap';\r\n\r\nimport { FaGooglePlusG } from 'react-icons/fa';\r\n\r\nclass CardsUst extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      messages: [],\r\n      input: '',\r\n      loginState : false,\r\n      loading: true,\r\n      name: '',\r\n      authLoading: true\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const {firebase} = this.props;\r\n    const messages = firebase.database().ref('messages/').limitToLast(10);\r\n\r\n    messages.on('child_added', snapshot => {\r\n      const veri = snapshot.val();\r\n      this.setState(state => {\r\n        const messages = state.messages.concat(veri);\r\n        return {\r\n          messages,\r\n          input: '',\r\n          loading: false\r\n        }\r\n      })\r\n    })\r\n\r\n    const token = localStorage.getItem('googleToken');\r\n    if (token) {\r\n      const credential = firebase.auth.GoogleAuthProvider.credential(null, token);\r\n      firebase.auth().signInAndRetrieveDataWithCredential(credential)\r\n              .then(res => {\r\n                this.setState({\r\n                  loginState: true,\r\n                  name: res.user.displayName,\r\n                  authLoading: false\r\n                })\r\n              })\r\n              .catch(err => this.setState({authLoading:false}))\r\n    } else {\r\n      this.setState({\r\n        authLoading: false\r\n      })\r\n    }\r\n\r\n  } /// end of componentDidMount()\r\n\r\n  updateInput = (e) => {\r\n    this.setState({\r\n      input: e.target.value\r\n    })\r\n  }\r\n\r\n  sendMessage = async (e) => {\r\n    await e.preventDefault();\r\n    const {firebase} = await this.props;\r\n    const refer = await firebase.database().ref('messages');\r\n\r\n    try {\r\n      const mesaj = await refer.push({message: this.state.input, username: this.state.name})\r\n      this.setState({\r\n        input : ''\r\n      })\r\n    } catch(err) {\r\n      console.log(err);\r\n      this.setState({\r\n        input: ''\r\n      })\r\n    }\r\n  }\r\n\r\n  googleLogin = () => {\r\n    const {firebase} = this.props;\r\n    const provider = new firebase.auth.GoogleAuthProvider();\r\n    provider.addScope('profile');\r\n    provider.addScope('email');\r\n    firebase.auth().signInWithPopup(provider)\r\n      .then(result => {\r\n        const token = result.credential.accessToken;\r\n        const {email} = result.user;\r\n\r\n\r\n        localStorage.setItem('googleToken', token);\r\n        this.setState({\r\n          loginState : true,\r\n          name : result.user.displayName\r\n        })\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      })\r\n  }\r\n\r\n\r\n  render() {\r\n    const messageForm = (\r\n      <Form onSubmit={this.sendMessage}>\r\n          <InputGroup className=\"pb-3 pt-3\">\r\n            <Input className=\"form-control\" onChange={this.updateInput} value={this.state.input} placeholder={this.state.name + \" olarak yaziyorsun\"} />\r\n          </InputGroup>\r\n          <Button type=\"submit\" className=\"w-100 bg-info\" >Gönder</Button>\r\n      </Form>\r\n    )\r\n\r\n    const googleButton = (\r\n      <Button onClick={this.googleLogin} className=\"w-100 bg-danger\"><FaGooglePlusG size={23}/> Google ile Üye Ol</Button>\r\n    )\r\n\r\n    const chatMessages = (\r\n      <div>\r\n        {this.state.messages.map((val, index) =>\r\n          <Card key={index} className=\"p-1 mb-2 mt-2 w-50\">\r\n            <CardText><strong>@{val.username}</strong> {val.message}</CardText>\r\n          </Card>\r\n        )}\r\n        {this.state.authLoading && <Spinner className=\"mx-auto\" style={{ width: '3rem', height: '3rem' }} type=\"grow\" /> }\r\n        {this.state.loginState ? messageForm : googleButton}\r\n      </div>\r\n    )\r\n\r\n    return (\r\n      <Fragment>\r\n        <Row className=\"mx-auto d-flex justify-content-center pb-5\">\r\n          <Col sm=\"8\">\r\n            <Card className=\"shadow-lg\" body>\r\n              <CardTitle className=\"card-title text-center\">Chat Odasi</CardTitle>\r\n            {this.state.loading ? <Spinner className=\"mx-auto\" style={{ width: '3rem', height: '3rem' }} type=\"grow\" /> : chatMessages}\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CardsUst;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAKA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAiDA;AACA;AADA;AAGA;AACA;AArDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsDA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAEA;AAFA;AAAA;AACA;AADA;AAGA;AAHA;AAAA;AAAA;AAMA;AAAA;AAAA;AACA;AAPA;AAMA;AACA;AAAA;AACA;AADA;AACA;AARA;AAAA;AACA;AADA;AAAA;AAAA;AAWA;AACA;AAAA;AACA;AADA;AACA;AAbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAvDA;AAAA;AAAA;AAAA;AACA;AADA;AAwEA;AAEA;AACA;AACA;AACA;AAEA;AADA;AAKA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AACA;AA3FA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAFA;AAUA;AACA;;;AACA;AAAA;AACA;AADA;AAEA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AADA;AAGA;AAEA;AACA;;;AAgDA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;AACA;AAAA;AAAA;AADA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;AAtIA;AACA;AAwIA;;;;A","sourceRoot":""}